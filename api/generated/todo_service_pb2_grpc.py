# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.generated import todo_service_pb2 as api_dot_generated_dot_todo__service__pb2


class TodoServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getTodo = channel.unary_unary(
                '/organiza_ai.TodoServices/getTodo',
                request_serializer=api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.SerializeToString,
                response_deserializer=api_dot_generated_dot_todo__service__pb2.TodoMessage.FromString,
                )
        self.getAllTodo = channel.unary_unary(
                '/organiza_ai.TodoServices/getAllTodo',
                request_serializer=api_dot_generated_dot_todo__service__pb2.empty.SerializeToString,
                response_deserializer=api_dot_generated_dot_todo__service__pb2.TodoResponse.FromString,
                )
        self.addTodo = channel.unary_unary(
                '/organiza_ai.TodoServices/addTodo',
                request_serializer=api_dot_generated_dot_todo__service__pb2.AddTodoMessage.SerializeToString,
                response_deserializer=api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.FromString,
                )
        self.editTodo = channel.unary_unary(
                '/organiza_ai.TodoServices/editTodo',
                request_serializer=api_dot_generated_dot_todo__service__pb2.TodoMessage.SerializeToString,
                response_deserializer=api_dot_generated_dot_todo__service__pb2.TodoMessage.FromString,
                )
        self.deleteTodo = channel.unary_unary(
                '/organiza_ai.TodoServices/deleteTodo',
                request_serializer=api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.SerializeToString,
                response_deserializer=api_dot_generated_dot_todo__service__pb2.empty.FromString,
                )


class TodoServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def editTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TodoServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.getTodo,
                    request_deserializer=api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.FromString,
                    response_serializer=api_dot_generated_dot_todo__service__pb2.TodoMessage.SerializeToString,
            ),
            'getAllTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllTodo,
                    request_deserializer=api_dot_generated_dot_todo__service__pb2.empty.FromString,
                    response_serializer=api_dot_generated_dot_todo__service__pb2.TodoResponse.SerializeToString,
            ),
            'addTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.addTodo,
                    request_deserializer=api_dot_generated_dot_todo__service__pb2.AddTodoMessage.FromString,
                    response_serializer=api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.SerializeToString,
            ),
            'editTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.editTodo,
                    request_deserializer=api_dot_generated_dot_todo__service__pb2.TodoMessage.FromString,
                    response_serializer=api_dot_generated_dot_todo__service__pb2.TodoMessage.SerializeToString,
            ),
            'deleteTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteTodo,
                    request_deserializer=api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.FromString,
                    response_serializer=api_dot_generated_dot_todo__service__pb2.empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'organiza_ai.TodoServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TodoServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organiza_ai.TodoServices/getTodo',
            api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.SerializeToString,
            api_dot_generated_dot_todo__service__pb2.TodoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organiza_ai.TodoServices/getAllTodo',
            api_dot_generated_dot_todo__service__pb2.empty.SerializeToString,
            api_dot_generated_dot_todo__service__pb2.TodoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organiza_ai.TodoServices/addTodo',
            api_dot_generated_dot_todo__service__pb2.AddTodoMessage.SerializeToString,
            api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def editTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organiza_ai.TodoServices/editTodo',
            api_dot_generated_dot_todo__service__pb2.TodoMessage.SerializeToString,
            api_dot_generated_dot_todo__service__pb2.TodoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organiza_ai.TodoServices/deleteTodo',
            api_dot_generated_dot_todo__service__pb2.SearchTodoMessage.SerializeToString,
            api_dot_generated_dot_todo__service__pb2.empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
